Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              src/rfm69c.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              src/timer2.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
                              src/lcd.o (fdevopen)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o) (__iob)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
                              src/Mikrocontrolle.o (puts)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o) (calloc)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o) (malloc)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memset.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o) (memset)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
id                  0x1               src/rfm69c.o
direction           0x1               src/encoder.o
counter             0x4               src/timer2.o
currentMode         0x1               src/rfm69c.o
__flp               0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__iob               0x6               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)

↵
Speichereinrichtung
↵

Name             Ursprung           Länge             Eigenschaften
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
LOAD src/led.o
LOAD src/timer0.o
LOAD src/timer2.o
LOAD src/lcd.o
LOAD src/encoder.o
LOAD src/spi.o
LOAD src/rfm69c.o
LOAD src/transceiver.o
LOAD src/Mikrocontrolle.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1812
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092      0x266 src/led.o
                0x0000000000000092                led_init
                0x00000000000000c4                led_red
                0x000000000000015c                led_green
                0x00000000000001f2                led_off
                0x000000000000028a                led_toggle
 .text          0x00000000000002f8       0x44 src/timer0.o
                0x00000000000002f8                timer0_init
 .text          0x000000000000033c      0x190 src/timer2.o
                0x000000000000033c                timer2_init
                0x00000000000003de                timer2_get
                0x0000000000000400                timer2_wait
                0x0000000000000472                __vector_4
 .text          0x00000000000004cc      0x3fe src/lcd.o
                0x00000000000004cc                lcd_en_write
                0x0000000000000516                lcd_writeNibble
                0x0000000000000564                lcd_writeByte
                0x00000000000005f6                lcd_writeCommand
                0x000000000000062e                lcd_writeData
                0x0000000000000666                lcd_init
                0x0000000000000750                lcd_putChar
                0x0000000000000852                lcd_locate
                0x00000000000008a6                lcd_clear
 .text          0x00000000000008ca      0x2d2 src/encoder.o
                0x00000000000008ca                encoder_INT0_init
                0x0000000000000934                encoder_INT1_init
                0x000000000000099e                encoder_turn_get
                0x00000000000009c0                encoder_press_time
                0x00000000000009fe                __vector_1
                0x0000000000000aca                __vector_2
 .text          0x0000000000000b9c       0xf0 src/spi.o
                0x0000000000000b9c                SPI_Initialize
                0x0000000000000bf8                SPI_Transmission
                0x0000000000000c7a                SPI_IsEnabled
 .text          0x0000000000000c8c      0x672 src/rfm69c.o
                0x0000000000000c8c                RFM_Initialize
                0x0000000000000df8                RFM_Send
                0x0000000000000e80                RFM_GetRxPacket
                0x0000000000000f22                RFM_RxMode
                0x0000000000000f92                RFM_TxMode
                0x0000000000000fe8                RFM_StandbyMode
                0x0000000000001020                RFM_GetMode
                0x0000000000001032                RFM_RSSIValue
                0x0000000000001078                RFM_GetNodeAddress
                0x000000000000108a                RFM_ReadByte
                0x00000000000010a4                readFrom
                0x00000000000010dc                writeTo
                0x0000000000001114                dataExchange
                0x000000000000114e                writeByte
                0x0000000000001176                write16
                0x00000000000011b8                writeBurst
                0x00000000000011ea                readByte
                0x0000000000001212                readBurst
                0x0000000000001244                testSPI
 .text          0x00000000000012fe       0xba src/transceiver.o
                0x00000000000012fe                transceiver_initialize
                0x0000000000001366                clear_flag
                0x0000000000001378                trans_get_flag
                0x000000000000138a                __vector_3
 .text          0x00000000000013b8       0xd2 src/Mikrocontrolle.o
                0x00000000000013b8                Send
                0x0000000000001434                main
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
 .text          0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memset.o)
                0x000000000000148a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000148a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000000148a       0x96 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
                0x000000000000148a                fdevopen
 .text.avr-libc
                0x0000000000001520       0x5a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
                0x0000000000001520                puts
 .text.avr-libc
                0x000000000000157a       0x38 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
                0x000000000000157a                calloc
 .text.avr-libc
                0x00000000000015b2      0x24e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x00000000000015b2                malloc
                0x00000000000016e2                free
 .text.avr-libc
                0x0000000000001800        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memset.o)
                0x0000000000001800                memset
                0x000000000000180e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000180e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x000000000000180e                exit
                0x000000000000180e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000180e        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001812                _etext = .

.data           0x0000000000800060       0x32 load address 0x0000000000001812
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 src/led.o
 .data          0x0000000000800060        0x0 src/timer0.o
 .data          0x0000000000800060        0x0 src/timer2.o
 .data          0x0000000000800060        0x0 src/lcd.o
 .data          0x0000000000800060        0x0 src/encoder.o
 .data          0x0000000000800060        0x0 src/spi.o
 .data          0x0000000000800060        0x0 src/rfm69c.o
 .data          0x0000000000800060        0x0 src/transceiver.o
 .data          0x0000000000800060        0x0 src/Mikrocontrolle.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
 .data          0x0000000000800060        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800060                __malloc_heap_end
                0x0000000000800062                __malloc_heap_start
                0x0000000000800064                __malloc_margin
 .data          0x0000000000800066        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memset.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800066       0x10 src/rfm69c.o
 .rodata        0x0000000000800076       0x1c src/Mikrocontrolle.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800092                . = ALIGN (0x2)
                0x0000000000800092                _edata = .
                0x0000000000800092                PROVIDE (__data_end, .)

.bss            0x0000000000800092       0x36
                0x0000000000800092                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800092        0x0 src/led.o
 .bss           0x0000000000800092        0x0 src/timer0.o
 .bss           0x0000000000800092        0x0 src/timer2.o
 .bss           0x0000000000800092        0x2 src/lcd.o
                0x0000000000800092                i
 .bss           0x0000000000800094        0xe src/encoder.o
                0x0000000000800094                turn_count
                0x0000000000800098                press_time
                0x000000000080009c                press_duration
                0x00000000008000a0                press_flag
                0x00000000008000a1                long_press_flag
 .bss           0x00000000008000a2        0x1 src/spi.o
                0x00000000008000a2                init_flag
 .bss           0x00000000008000a3       0x13 src/rfm69c.o
 .bss           0x00000000008000b6        0x1 src/transceiver.o
                0x00000000008000b6                trans_interrupt_flag
 .bss           0x00000000008000b7        0x0 src/Mikrocontrolle.o
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
 .bss           0x00000000008000b7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memset.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000b7        0x4 src/timer2.o
                0x00000000008000b7                counter
 COMMON         0x00000000008000bb        0x1 src/encoder.o
                0x00000000008000bb                direction
 COMMON         0x00000000008000bc        0x2 src/rfm69c.o
                0x00000000008000bc                id
                0x00000000008000bd                currentMode
 COMMON         0x00000000008000be        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
                0x00000000008000be                __iob
 COMMON         0x00000000008000c4        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x00000000008000c4                __brkval
                0x00000000008000c6                __flp
                0x00000000008000c8                PROVIDE (__bss_end, .)
                0x0000000000001812                __data_load_start = LOADADDR (.data)
                0x0000000000001844                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000c8        0x0
                0x00000000008000c8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000c8                PROVIDE (__noinit_end, .)
                0x00000000008000c8                _end = .
                0x00000000008000c8                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x5b80
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x69c src/led.o
                                        0x6a8 (size before relaxing)
 .stab          0x0000000000000d68      0x324 src/timer0.o
                                        0x4ec (size before relaxing)
 .stab          0x000000000000108c      0x4c8 src/timer2.o
                                        0x690 (size before relaxing)
 .stab          0x0000000000001554      0x99c src/lcd.o
                                        0xb64 (size before relaxing)
 .stab          0x0000000000001ef0      0x63c src/encoder.o
                                        0x804 (size before relaxing)
 .stab          0x000000000000252c      0x4b0 src/spi.o
                                        0x6cc (size before relaxing)
 .stab          0x00000000000029dc     0x11ac src/rfm69c.o
                                       0x13b0 (size before relaxing)
 .stab          0x0000000000003b88      0x48c src/transceiver.o
                                        0x6f0 (size before relaxing)
 .stab          0x0000000000004014      0x4f8 src/Mikrocontrolle.o
                                        0x75c (size before relaxing)
 .stab          0x000000000000450c      0x5d0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
                                        0x630 (size before relaxing)
 .stab          0x0000000000004adc      0x2ac /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
                                        0x48c (size before relaxing)
 .stab          0x0000000000004d88      0x36c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
                                        0x54c (size before relaxing)
 .stab          0x00000000000050f4      0x318 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
                                        0x378 (size before relaxing)
 .stab          0x000000000000540c      0x708 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                        0x8e8 (size before relaxing)
 .stab          0x0000000000005b14       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memset.o)
                                         0x78 (size before relaxing)

.stabstr        0x0000000000000000     0x1faa
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1faa /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 src/led.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 src/timer0.o
 .comment       0x0000000000000000       0x12 src/timer2.o
 .comment       0x0000000000000000       0x12 src/lcd.o
 .comment       0x0000000000000000       0x12 src/encoder.o
 .comment       0x0000000000000000       0x12 src/spi.o
 .comment       0x0000000000000000       0x12 src/rfm69c.o
 .comment       0x0000000000000000       0x12 src/transceiver.o
 .comment       0x0000000000000000       0x12 src/Mikrocontrolle.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Mikrocontrolle.elf elf32-avr)
LOAD linker stubs

Kreuzreferenz-Tabelle

Symbol                                            Datei
RFM_GetMode                                       src/rfm69c.o
RFM_GetNodeAddress                                src/rfm69c.o
RFM_GetRxPacket                                   src/rfm69c.o
RFM_Initialize                                    src/rfm69c.o
                                                  src/Mikrocontrolle.o
RFM_RSSIValue                                     src/rfm69c.o
RFM_ReadByte                                      src/rfm69c.o
RFM_RxMode                                        src/rfm69c.o
                                                  src/Mikrocontrolle.o
RFM_Send                                          src/rfm69c.o
                                                  src/Mikrocontrolle.o
RFM_StandbyMode                                   src/rfm69c.o
                                                  src/Mikrocontrolle.o
RFM_TxMode                                        src/rfm69c.o
                                                  src/Mikrocontrolle.o
SPI_Initialize                                    src/spi.o
                                                  src/Mikrocontrolle.o
                                                  src/rfm69c.o
SPI_IsEnabled                                     src/spi.o
                                                  src/rfm69c.o
SPI_Transmission                                  src/spi.o
                                                  src/Mikrocontrolle.o
                                                  src/rfm69c.o
Send                                              src/Mikrocontrolle.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__brkval                                          /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
                                                  src/Mikrocontrolle.o
                                                  src/transceiver.o
                                                  src/rfm69c.o
                                                  src/spi.o
                                                  src/encoder.o
                                                  src/lcd.o
                                                  src/timer2.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  src/Mikrocontrolle.o
                                                  src/rfm69c.o
__flp                                             /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_start                                      /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__iob                                             /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(iob.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
__malloc_heap_end                                 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_heap_start                               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_margin                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_1                                        src/encoder.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_2                                        src/encoder.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_3                                        src/transceiver.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_4                                        src/timer2.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
calloc                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
clear_flag                                        src/transceiver.o
                                                  src/Mikrocontrolle.o
counter                                           src/Mikrocontrolle.o
                                                  src/rfm69c.o
                                                  src/encoder.o
                                                  src/lcd.o
                                                  src/timer2.o
currentMode                                       src/rfm69c.o
dataExchange                                      src/rfm69c.o
direction                                         src/encoder.o
encoder_INT0_init                                 src/encoder.o
encoder_INT1_init                                 src/encoder.o
encoder_press_time                                src/encoder.o
encoder_turn_get                                  src/encoder.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
fdevopen                                          /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(fdevopen.o)
                                                  src/lcd.o
free                                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
i                                                 src/lcd.o
id                                                src/rfm69c.o
init_flag                                         src/spi.o
lcd_clear                                         src/lcd.o
                                                  src/Mikrocontrolle.o
lcd_en_write                                      src/lcd.o
lcd_init                                          src/lcd.o
                                                  src/Mikrocontrolle.o
lcd_locate                                        src/lcd.o
                                                  src/Mikrocontrolle.o
lcd_putChar                                       src/lcd.o
lcd_writeByte                                     src/lcd.o
lcd_writeCommand                                  src/lcd.o
lcd_writeData                                     src/lcd.o
lcd_writeNibble                                   src/lcd.o
led_green                                         src/led.o
led_init                                          src/led.o
                                                  src/Mikrocontrolle.o
led_off                                           src/led.o
led_red                                           src/led.o
led_toggle                                        src/led.o
                                                  src/Mikrocontrolle.o
                                                  src/encoder.o
long_press_flag                                   src/encoder.o
main                                              src/Mikrocontrolle.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
malloc                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
memset                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memset.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(calloc.o)
press_duration                                    src/encoder.o
press_flag                                        src/encoder.o
press_time                                        src/encoder.o
puts                                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(puts.o)
                                                  src/Mikrocontrolle.o
readBurst                                         src/rfm69c.o
readByte                                          src/rfm69c.o
readFrom                                          src/rfm69c.o
testSPI                                           src/rfm69c.o
timer0_init                                       src/timer0.o
                                                  src/Mikrocontrolle.o
timer2_get                                        src/timer2.o
                                                  src/encoder.o
timer2_init                                       src/timer2.o
                                                  src/Mikrocontrolle.o
timer2_wait                                       src/timer2.o
                                                  src/Mikrocontrolle.o
                                                  src/rfm69c.o
                                                  src/lcd.o
trans_get_flag                                    src/transceiver.o
                                                  src/Mikrocontrolle.o
trans_interrupt_flag                              src/transceiver.o
transceiver_initialize                            src/transceiver.o
                                                  src/Mikrocontrolle.o
turn_count                                        src/encoder.o
write16                                           src/rfm69c.o
writeBurst                                        src/rfm69c.o
writeByte                                         src/rfm69c.o
writeTo                                           src/rfm69c.o
